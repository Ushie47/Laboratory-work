%include 'in_out.asm'     ; Подключаем внешний файл для вывода и завершения

SECTION .data
msg1 db 'Введите значение x: ', 0
msg2 db 'Введите значение a: ', 0
msg3 db 'Результат вычисления f(x): ', 0
f_x db 0                  ; Переменная для хранения результата функции

SECTION .bss
x resd 1                  ; Буфер для хранения значения x
a resd 1                  ; Буфер для хранения значения a

SECTION .text
GLOBAL _start

_start:
    ; Ввод значения x
    mov eax, msg1
    call sprint
    call read_int         ; Чтение значения x
    mov [x], eax          ; Сохраняем значение x

    ; Ввод значения a
    mov eax, msg2
    call sprint
    call read_int         ; Чтение значения a
    mov [a], eax          ; Сохраняем значение a

    ; Загружаем значения x и a
    mov eax, [x]          ; Загружаем x в eax
    mov ebx, [a]          ; Загружаем a в ebx

    ; Проверяем, если x > a
    cmp eax, ebx          ; Сравниваем x и a
    jle _x_less_or_equal  ; Если x <= a, переходим к f(x) = 15

    ; Если x > a, вычисляем f(x) = 2(x - a)
    sub eax, ebx          ; x - a
    shl eax, 1            ; Умножаем (x - a) на 2, результат в eax
    mov [f_x], eax        ; Сохраняем результат в f_x
    jmp _print_result

_x_less_or_equal:
    ; Если x <= a, f(x) = 15
    mov byte [f_x], 15    ; Устанавливаем f_x = 15

_print_result:
    ; Выводим сообщение: "Результат вычисления f(x):"
    mov eax, msg3
    call sprint

    ; Выводим результат f(x)
    movzx eax, byte [f_x] ; Загружаем результат из f_x в eax
    call iprintLF

    ; Завершаем программу
    call quit

; Чтение целого числа с клавиатуры
read_int:
    ; Используем системный вызов для чтения строки
    mov eax, 3            ; Системный вызов для чтения из stdin (0 - стандартный ввод)
    mov ebx, 0            ; Стандартный ввод
    mov ecx, x            ; Адрес буфера для ввода
    mov edx, 4            ; Размер буфера (4 байта для одного целого числа)
    int 0x80              ; Вызов системного вызова

    ; Преобразуем строку в число
    ; Будем считать, что пользователь вводит число в виде строки, а мы его конвертируем
    mov eax, [x]          ; Загружаем строку в eax
    sub eax, '0'          ; Преобразуем символ в число (для простоты только для 1 цифры)
    ret
